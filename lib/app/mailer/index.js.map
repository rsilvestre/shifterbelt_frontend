{"version":3,"sources":["../../../src/app/mailer/index.js"],"names":[],"mappings":";;;;;;AAIA,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;;;;;;;;;;AAW/B,QAAQ,CAAC,SAAS,CAAC,eAAe,GAAG,UAAS,OAAO,EAAE,MAAM,EAAE;AAC7D,MAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,QAAM,CAAC,QAAQ,GAAG,OAAO,CAAC;AAC1B,SAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;CACzC,CAAC;;;;;;AAMF,MAAM,CAAC,OAAO,GAAG;;;;;;;;;;AAUf,SAAO,EAAE,iBAAS,OAAO,EAAE,EAAE,EAAE;AAC7B,QAAI,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;AAC9B,QAAI,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC;AAC1B,QAAI,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC;AAC/B,QAAI,QAAQ,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;;AAE7C,QAAI,GAAG,GAAG;AACR,QAAE,EAAE,MAAM,CAAC,KAAK;AAChB,UAAI,EAAE,kBAAkB;AACxB,aAAO,EAAE,IAAI,CAAC,IAAI,GAAG,mCAAmC,GAAG,OAAO,CAAC,KAAK;AACxE,WAAK,EAAE,IAAI,CAAC,IAAI,GAAG,UAAU,GAAG,OAAO,CAAC,OAAO;AAC/C,YAAM,EAAE;AACN,UAAE,EAAE,MAAM,CAAC,IAAI;AACf,YAAI,EAAE,IAAI,CAAC,IAAI;AACf,YAAI,EAAE,OAAO,CAAC,OAAO;AACrB,eAAO,EAAE,OAAO,CAAC,IAAI;OACtB;KACF,CAAC;;;;;;;AAOF,QAAI;AACF,cAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;KACnC,CAAC,OAAO,GAAG,EAAE;AACZ,aAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAClB;GAEF;;;;;;;;;AASD,mBAAiB,EAAE,2BAAS,OAAO,EAAE,EAAE,EAAE;AACvC,gBAAY,CAAC;AACb,QAAI,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;AACtC,QAAI,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC;AAC/B,QAAI,QAAQ,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;;AAE7C,QAAI,GAAG,GAAG;AACR,QAAE,EAAE,IAAI,CAAC,KAAK;AACd,UAAI,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK;AAChC,aAAO,EAAE,yBAAyB;AAClC,WAAK,OAAK,IAAI,CAAC,IAAI,wCAAmC,WAAW,CAAC,IAAI,AAAE;AACxE,YAAM,EAAE;AACN,UAAE,EAAE,IAAI,CAAC,IAAI;AACb,YAAI,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;AAC/B,YAAI,EAAE,WAAW,CAAC,IAAI;AACtB,mBAAW,EAAE,WAAW,CAAC,IAAI;OAC9B;KACF,CAAC;;;;;;;AAOF,QAAI;AACF,cAAQ,CAAC,IAAI,CAAC,mBAAmB,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;KAC7C,CAAC,OAAO,GAAG,EAAE;AACZ,aAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAClB;GACF;CACF,CAAC","file":"index.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar mongoose = require('mongoose');\nvar Notifier = require('notifier');\nvar config = require('config');\n\n/**\n * Process the templates using swig - refer to notifier#processTemplate method\n *\n * @param {String} tplPath\n * @param {Object} locals\n * @return {String}\n * @api public\n */\n\nNotifier.prototype.processTemplate = function(tplPath, locals) {\n  var swig = require('swig');\n  locals.filename = tplPath;\n  return swig.renderFile(tplPath, locals);\n};\n\n/**\n * Expose\n */\n\nmodule.exports = {\n\n  /**\n   * Comment notification\n   *\n   * @param {Object} options\n   * @param {Function} cb\n   * @api public\n   */\n\n  comment: function(options, cb) {\n    var article = options.article;\n    var author = article.user;\n    var user = options.currentUser;\n    var notifier = new Notifier(config.notifier);\n\n    var obj = {\n      to: author.email,\n      from: 'your@product.com',\n      subject: user.name + ' added a comment on your article ' + article.title,\n      alert: user.name + ' says: \"' + options.comment,\n      locals: {\n        to: author.name,\n        from: user.name,\n        body: options.comment,\n        article: article.name\n      }\n    };\n    // for apple push notifications\n    /*notifier.use({\n     APN: true\n     parseChannels: ['USER_' + author._id.toString()]\n     })*/\n\n    try {\n      notifier.send('comment', obj, cb);\n    } catch (err) {\n      console.log(err);\n    }\n\n  },\n\n  /**\n   * New Application notification\n   *\n   * @param {Object} options\n   * @param {Function} cb\n   * @api public\n   */\n  createApplication: function(options, cb) {\n    \"use strict\";\n    var application = options.application;\n    var user = options.currentUser;\n    var notifier = new Notifier(config.notifier);\n\n    var obj = {\n      to: user.email,\n      from: config.email.noreply.email,\n      subject: 'New application created',\n      alert: `${user.name} create a new application named ${application.name}`,\n      locals: {\n        to: user.name,\n        from: config.email.noreply.name,\n        body: application.name,\n        application: application.name\n      }\n    };\n    // for apple push notifications\n    /*notifier.use({\n     APN: true\n     parseChannels: ['USER_' + author._id.toString()]\n     })*/\n\n    try {\n      notifier.send('createApplication', obj, cb);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n};\n\n\n\n\n"]}