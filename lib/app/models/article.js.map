{"version":3,"sources":["../../../src/app/models/article.js"],"names":[],"mappings":"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","file":"article.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar mongoose = require('mongoose');\nvar Imager = require('imager');\nvar config = require('config');\n\nvar imagerConfig = require(config.root + '/config/imager.js');\nvar utils = require('../../lib/utils');\n\nvar Schema = mongoose.Schema;\n\n/**\n * Getters\n */\n\nvar getTags = function(tags) {\n  return tags.join(',');\n};\n\n/**\n * Setters\n */\n\nvar setTags = function(tags) {\n  return tags.split(',');\n};\n\n/**\n * Article Schema\n */\n\nvar ArticleSchema = new Schema({\n  title: { type: String, default: '', trim: true },\n  body: { type: String, default: '', trim: true },\n  user: { type: Schema.ObjectId, ref: 'User' },\n  comments: [{\n    body: { type: String, default: '' },\n    user: { type: Schema.ObjectId, ref: 'User' },\n    createdAt: { type: Date, default: Date.now }\n  }],\n  tags: { type: [], get: getTags, set: setTags },\n  image: {\n    cdnUri: String,\n    files: []\n  },\n  createdAt: { type: Date, default: Date.now }\n});\n\n/**\n * Validations\n */\n\nArticleSchema.path('title').required(true, 'Article title cannot be blank');\nArticleSchema.path('body').required(true, 'Article body cannot be blank');\n\n/**\n * Pre-remove hook\n */\n\nArticleSchema.pre('remove', function(next) {\n  var imager = new Imager(imagerConfig.variants.article, imagerConfig.storages.amazon);\n  var files = this.image.files;\n\n  // if there are files associated with the item, remove from the cloud too\n  imager.remove(files, function(err) {\n    if (err) {\n      return next(err);\n    }\n  }, 'article');\n\n  next();\n});\n\n/**\n * Methods\n */\n\nArticleSchema.methods = {\n\n  /**\n   * Save article and upload image\n   *\n   * @param {Object} images\n   * @param {Function} cb\n   * @api private\n   */\n\n  uploadAndSave: function(images, cb) {\n    if (!images || !images.length) {\n      return this.save(cb);\n    }\n\n    var imager = new Imager(imagerConfig.variants.article, imagerConfig.storages.amazon);\n    var self = this;\n\n    this.validate(function(err) {\n      if (err) {\n        return cb(err);\n      }\n      imager.upload(images, function(err, cdnUri, files) {\n        if (err) {\n          return cb(err);\n        }\n        if (files.length) {\n          self.image = { cdnUri: cdnUri, files: files };\n        }\n        self.save(cb);\n      }, 'article');\n    });\n  },\n\n  /**\n   * Add comment\n   *\n   * @param {User} user\n   * @param {Object} comment\n   * @param {Function} cb\n   * @api private\n   */\n\n  addComment: function(user, comment, cb) {\n    var notify = require('../mailer');\n\n    this.comments.push({\n      body: comment.body,\n      user: user._id\n    });\n\n    if (!this.user.email) {\n      this.user.email = 'email@product.com';\n    }\n    notify.comment({\n      article: this,\n      currentUser: user,\n      comment: comment.body\n    });\n\n    this.save(cb);\n  },\n\n  /**\n   * Remove comment\n   *\n   * @param {String} commentId\n   * @param {Function} cb\n   * @api private\n   */\n\n  removeComment: function(commentId, cb) {\n    var index = utils.indexof(this.comments, { id: commentId });\n    if (~index) {\n      this.comments.splice(index, 1);\n    } else {\n      return cb('not found');\n    }\n\n    this.save(cb);\n  }\n};\n\n/**\n * Statics\n */\n\nArticleSchema.statics = {\n\n  /**\n   * Find article by id\n   *\n   * @param {ObjectId} id\n   * @param {Function} cb\n   * @api private\n   */\n\n  load: function(id, cb) {\n    this.findOne({ _id: id })\n      .populate('user', 'name email username')\n      .populate('comments.user')\n      .exec(cb);\n  },\n\n  /**\n   * List articles\n   *\n   * @param {Object} options\n   * @param {Function} cb\n   * @api private\n   */\n\n  list: function(options, cb) {\n    var criteria = options.criteria || {};\n\n    this.find(criteria)\n      .populate('user', 'name username')\n      .sort({ 'createdAt': -1 }) // sort by date\n      .limit(options.perPage)\n      .skip(options.perPage * options.page)\n      .exec(cb);\n  }\n};\n\nmongoose.model('Article', ArticleSchema);\n"]}