{"version":3,"sources":["../../../src/app/models/user.js"],"names":[],"mappings":"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","file":"user.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar mongoose = require('mongoose');\nvar crypto = require('crypto');\nvar async = require('async');\n\nvar Schema = mongoose.Schema;\nvar oAuthTypes = [\n  'github',\n  'twitter',\n  'facebook',\n  'google',\n  'linkedin'\n];\n\nvar validateEmail = function(email) {\n  \"use strict\";\n\n  var re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  return re.test(email);\n};\n\n/**\n * User Schema\n */\nvar UserSchema = new Schema({\n  email: {\n    type: String,\n    trim: true,\n    unique: true,\n    required: 'Email address is required',\n    validate: [validateEmail, 'Please fill a valid email address'],\n    match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please fill a valid email address']\n  },\n  name: { type: String, default: '' },\n  username: { type: String, default: '' },\n  provider: { type: String, default: '' },\n  tariffPlan: { type: String, default: '', enum: ['', 'plan1', 'plan2', 'plan3', 'plan4', 'plan5', 'custom'] },\n  hashed_password: { type: String, default: '' },\n  salt: { type: String, default: '' },\n  authToken: { type: String, default: '' },\n  facebook: {},\n  twitter: {},\n  github: {},\n  google: {},\n  linkedin: {},\n  applications: [{ applicationId: { type: Schema.ObjectId, ref: \"Application\" } }],\n  firstname: { type: String },\n  lastname: { type: String },\n  phonenumber: { type: String },\n  addresses: [{\n    typeAddress: { type: String },\n    street: { type: String },\n    number: { type: String },\n    town: { type: String },\n    postcode: { type: String },\n    country: { type: String },\n    createdAt: { type: Date, default: Date.now }\n  }],\n  plans: [{\n    planId: { type: Schema.ObjectId, ref: 'Plan' },\n    createdAt: { type: Date, default: Date.now }\n  }],\n  createdAt: { type: Date, default: Date.now }\n});\n\n/**\n * Virtuals\n */\n\nUserSchema\n  .virtual('password')\n  .set(function(password) {\n    this._password = password;\n    this.salt = this.makeSalt();\n    this.hashed_password = this.encryptPassword(password);\n  })\n  .get(function() {\n    return this._password;\n  });\n\n/**\n * Validations\n */\n\nvar validatePresenceOf = function(value) {\n  \"use strict\";\n\n  return value && value.length;\n};\n\n// the below 5 validations only apply if you are signing up traditionally\n\nUserSchema.path('name').validate(function(name) {\n  if (this.skipValidation()) {\n    return true;\n  }\n  return name.length;\n}, 'Name cannot be blank');\n\nUserSchema.path('email').validate(function(email) {\n  if (this.skipValidation()) {\n    return true;\n  }\n  return email.length;\n}, 'Email cannot be blank');\n\nUserSchema.path('email').validate(function(email, fn) {\n  var User = mongoose.model('User');\n  if (this.skipValidation()) {\n    fn(true);\n  }\n\n  // Check only when it is a new user or when email field is modified\n  if (this.isNew || this.isModified('email')) {\n    User.find({ email: email }).exec(function(err, users) {\n      fn(!err && users.length === 0);\n    });\n  } else {\n    fn(true);\n  }\n}, 'Email already exists');\n\nUserSchema.path('username').validate(function(username) {\n  if (this.skipValidation()) {\n    return true;\n  }\n  return username.length;\n}, 'Username cannot be blank');\n\nUserSchema.path('hashed_password').validate(function(hashed_password) {\n  if (this.skipValidation()) {\n    return true;\n  }\n  return hashed_password.length;\n}, 'Password cannot be blank');\n\n\n/**\n * Pre-save hook\n */\n\nUserSchema.pre('save', function(next) {\n  if (!this.isNew) {\n    return next();\n  }\n\n  if (!validatePresenceOf(this.password) && !this.skipValidation()) {\n    next(new Error('Invalid password'));\n  } else {\n    next();\n  }\n});\n\n/**\n * Methods\n */\n\nUserSchema.methods = {\n\n  /**\n   * Authenticate - check if the passwords are the same\n   *\n   * @param {String} plainText\n   * @return {Boolean}\n   * @api public\n   */\n  authenticate: function(plainText) {\n    return this.encryptPassword(plainText) === this.hashed_password;\n  },\n\n  /**\n   * Make salt\n   *\n   * @return {String}\n   * @api public\n   */\n  makeSalt: function() {\n    return Math.round((new Date().valueOf() * Math.random())) + '';\n  },\n\n  /**\n   * Encrypt password\n   *\n   * @param {String} password\n   * @return {String}\n   * @api public\n   */\n  encryptPassword: function(password) {\n    if (!password) {\n      return '';\n    }\n    try {\n      return crypto\n        .createHmac('sha1', this.salt)\n        .update(password)\n        .digest('hex');\n    } catch (err) {\n      return '';\n    }\n  },\n\n  /**\n   * Validation is not required if using OAuth\n   */\n  skipValidation: function() {\n    return ~oAuthTypes.indexOf(this.provider);\n  }\n};\n\n/**\n * Statics\n */\n\nUserSchema.statics = {\n\n  /**\n   * Load\n   *\n   * @param {Object} options\n   * @param {Function} cb\n   * @api private\n   */\n\n  load: function(options, cb) {\n    var Tariff = mongoose.model('Tariff');\n    options.select = options.select || 'name username email plans';\n    this.findOne(options.criteria)\n      .populate({\n        path: 'plans',\n        options: { sort: { createdAt: -1 }, limit: 1 }\n      })\n      .select(options.select)\n      .exec(function(err, data) {\n        \"use strict\";\n\n        if (err) {\n          return cb(err, null);\n        }\n        if (!data || !data.hasOwnProperty('plans')) {\n          return cb(null, data);\n        }\n        async.forEach(data.plans, function(plan, callback) {\n          Tariff.populate(plan, { path: \"tariffPlan\" }, function(err, output) {\n            if (err) {\n              return cb(err, null);\n            }\n\n            //return cb(null, data);\n            callback();\n          });\n        }, function(err) {\n          if (err) {\n            return cb(err);\n          }\n          return cb(null, data);\n        });\n      });\n  }\n};\n\nmongoose.model('User', UserSchema);\n"]}