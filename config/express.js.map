{"version":3,"sources":["/Users/michaelsilvestre/git/shifterbelt/frontend/config/express.es6"],"names":[],"mappings":"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","file":"express.js","sourcesContent":["import express  from 'express';\nimport favicon from 'serve-favicon';\nimport morgan from 'morgan';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from'body-parser';\n\nimport fs from \"fs\"\nimport path from 'path';\n\nimport mongoose from \"mongoose\"\n\nimport genUuid from \"../helper/genUuid.js\"\n\nimport url from \"url\";\n\nimport swig from \"swig\";\nimport moment from 'moment';\nimport extras from \"swig-extras\";\n\nimport ua from 'universal-analytics';\n\nimport methodOverride from \"method-override\";\n\nimport multer from \"multer\";\n\nimport redis from \"redis\";\nimport session from \"express-session\";\nimport sessionStore from \"sessionstore\";\n\nimport compression from \"compression\";\n\nimport csrf from \"csurf\";\nimport mongoStore from \"connect-mongo\";\nimport flash from \"connect-flash\";\nimport winston from \"winston\";\nimport helpers from \"view-helpers\";\n\nimport config from \"config\";\n\nimport pkg from \"../package.json\";\n\nlet env = process.env.MODE_ENV || \"development\";\n\n/**\n * expost\n * @param app\n * @param passport\n */\nmodule.exports = function(app, passport) {\n\n    app.use(compression({\n        threshold: 512\n    }));\n\n    // Use winston on production\n    let log;\n    if (env !== 'development') {\n        log = {\n            stream: {\n                write: function (message, encoding) {\n                    winston.info(message);\n                }\n            }\n        };\n    } else {\n        log = 'dev';\n    }\n\n    var redisURL = url.parse(process.env.REDISCLOUD_URL || 'redis://localhost:6379');\n    var client = redis.createClient(redisURL.port, redisURL.hostname, { no_ready_check: true });\n    if (redisURL.auth) {\n        client.auth(redisURL.auth.split(\":\")[1]);\n    }\n\n    // view engine setup\n    app.set('views', `${config.root}/app/views`);\n    app.engine('swig', swig.renderFile);\n    app.set('view engine', 'swig');\n\n    swig.setFilter('length', (input) => {\n        if (Object.prototype.toString.call(input) === '[object Array]') {\n            return input.length;\n        }\n    });\n\n    swig.setFilter('moment', (input) => {\n        return moment(input).fromNow();\n    });\n\n    extras.useFilter(swig, 'markdown');\n\n    app.use(ua.middleware('UA-', { coockieName: '_ga' }));\n\n    // uncomment after placing your favicon in /public\n    //app.use(favicon(__dirname + '/public/favicon.ico'));\n    if (env !== 'test') {\n        app.use(morgan(log));\n    }\n    app.use(bodyParser.json());\n    app.use(bodyParser.urlencoded({ extended: false }));\n    app.use(cookieParser());\n    app.use(express.static(`${config.root}/public`));\n    app.use(methodOverride(\"_method\"));\n\n    app.use(session({\n        genid: function (req) {\n            return genUuid(); // use UUIDs for session IDs\n        },\n        secret: process.env.SESSION_SECRET || 'hello world',\n        name: \"tiny_cookie\",\n        store: sessionStore.createSessionStore(process.env.REDISCLOUD_URL ? { url: process.env.REDISCLOUD_URL } : {\n            type: 'redis',\n            host: 'localhost',         // optional\n            port: 6379,                // optional\n            prefix: 'sess',            // optional\n            ttl: 804600,               // optional\n            timeout: 10000             // optional\n        }),\n        resave: true,\n        saveUninitialized: true\n    }));\n\n    app.use(multer({\n        dest: './uploads/',\n        rename: function (fieldname, filename) {\n            return filename.replace(/\\W+/g, '-').toLowerCase() + Date.now()\n        },\n        limits: {\n            fieldNameSize: 50,\n            fieldSize: 4000000,\n            files: 2,\n            fields: 10\n        }\n    }));\n\n    // use passport session\n    app.use(passport.initialize());\n    app.use(passport.session());\n\n    // connect flash for flash messages - shoud be declared after sessions\n    app.use(flash());\n\n    // should be declared after session ans flash\n    app.use(helpers(pkg.name));\n\n    // adds CSRF support\n    if (env !== 'test') {\n        app.use(csrf());\n\n        app.use((req, res, next) => {\n            res.locals.csrf_token = req.csrfToken();\n            next();\n        });\n    }\n\n    app.use((req, res, next) => {\n        res.locals.pkg = pkg;\n        res.locals.env = env;\n        next();\n    });\n\n    app.use(function (req, res, next) {\n        req.visitor.pageview(req.originalUrl).send();\n        next();\n    });\n\n   /*\n    // catch 404 and forward to error handler\n    app.use(function (req, res, next) {\n        var err = new Error('Not Found');\n        err.status = 404;\n        next(err);\n    });\n    */\n    // error handlers\n\n    // development error handler\n    // will print stacktrace\n    if (env === 'development' || env === 'test') {\n        app.set('view cache', false);\n        swig.setDefaults({ cache: false });\n        /*\n        app.use(function (err, req, res, next) {\n\n            console.error(err.message);\n            console.error(err.stack);\n            res.status(err.status || 500);\n            res.render('error_template', {\n                title: 'Internal error',\n                message: err.message,\n                error: err\n            });\n        });\n        */\n    }\n\n    /*\n    // production error handler\n    // no stacktraces leaked to user\n    app.use(function (err, req, res, next) {\n        res.status(err.status || 500);\n        res.render('error', {\n            message: err.message,\n            error: {}\n        });\n    });\n    */\n};\n\n"]}